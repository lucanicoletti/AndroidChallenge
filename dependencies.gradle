allprojects {
    repositories {
        jcenter()
    }
}

ext {

    // Android
    xAppCompatVersion = '1.1.0'
    xCoreKtxVersion = '1.2.0'
    xMaterialVersion = '1.2.0-alpha05'
    xConstraintLayoutVersion = '1.1.3'
    xEspressoIdlingResourceVersion = '3.3.0-alpha04'
    xLifeCycleExtensionsVersion = '2.2.0'
    xAnnotationVersion = '1.1.0'

    // Testing
    junitVersion = '4.12'
    kotlinVersion = '1.5.20'
    mockitoInlineVersion = '3.3.0'
    mockitoCoreVersion = '3.3.0'
    powerMockVersion = '2.0.0-beta.5'

    // Android Testing
    testCoreVersion = '1.1.0'
    testJUnitVersion = '1.1.0'
    testRunnerVersion = '1.2.0-alpha3'
    testRulesVersion = '1.1.1'
    mockitoAndroidVersion = '3.3.0'
    mockitoKotlinVersion = '2.2.0'
    archCoreTestingVersion = '2.1.0'
    espressoCoreVersion = '3.2.0'

    // dagger
    daggerVersion = '2.40'

    //coroutines
    coroutines = '1.4.1'

    // Retrofit
    retrofitVersion = '2.7.2'

    // OkHttpInterceptor
    logginInterceptorVersion = '4.4.0'

    // Glide
    glideVersion = '4.9.0'

    // Inject
    injectVersion = '1'

    // Groupie
    groupieVersion = '2.7.0'

    // Kakao
    kakaoVersion = '2.0.0'

    presentationDependencies = [
        implementation: [
            kotlin               : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion",
            appCompat            : "androidx.appcompat:appcompat:$xAppCompatVersion",
            coreKtx              : "androidx.core:core-ktx:$xCoreKtxVersion",
            androixMaterial      : "com.google.android.material:material:$xMaterialVersion",
            constraintLayout     : "androidx.constraintlayout:constraintlayout:$xConstraintLayoutVersion",
            idlingResource       : "androidx.test.espresso:espresso-idling-resource:$xEspressoIdlingResourceVersion",
            lifeCycleExtensions  : "androidx.lifecycle:lifecycle-extensions:$xLifeCycleExtensionsVersion",
            retrofit             : "com.squareup.retrofit2:retrofit:$retrofitVersion",
            retrofitGSonConverter: "com.squareup.retrofit2:converter-gson:$retrofitVersion",
            okHttpInterceptor    : "com.squareup.okhttp3:logging-interceptor:$logginInterceptorVersion",
            glide                : "com.github.bumptech.glide:glide:$glideVersion",
            daggerAndroid        : "com.google.dagger:dagger-android:$daggerVersion",
            daggerAndroidSupport : "com.google.dagger:dagger-android-support:$daggerVersion",
            inject               : "javax.inject:javax.inject:$injectVersion",
            groupie              : "com.xwray:groupie:$groupieVersion",
            groupieAndroidKotlin : "com.xwray:groupie-kotlin-android-extensions:$groupieVersion",
            coroutinesCore       : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines",
            coroutinesAndroid    : "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines",
            androidLifecycle     : "androidx.lifecycle:lifecycle-viewmodel-ktx:$xLifeCycleExtensionsVersion"
        ],
        kapt          : [
            daggerCompiler        : "com.google.dagger:dagger-compiler:$daggerVersion",
            daggerAndroidProcessor: "com.google.dagger:dagger-android-processor:$daggerVersion",
            androidXAnnotation    : "androidx.annotation:annotation:$xAnnotationVersion",
            glidecompiler         : "com.github.bumptech.glide:compiler:$glideVersion",
        ]
    ]
    presentationTestDependencies = [
        testImplementation       : [
            junit         : "junit:junit:$junitVersion",
            mockito       : "org.mockito:mockito-inline:$mockitoInlineVersion",
            powemockApi   : "org.powermock:powermock-api-mockito2:$powerMockVersion",
            powermockJUnit: "org.powermock:powermock-module-junit4:$powerMockVersion",
            xCoreTesting  : "androidx.arch.core:core-testing:$archCoreTestingVersion",
            mockitoKotlin : "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion",
            coroutinesTest: "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
        ],
        androidTestImplementation: [
            mockitoAndroid: "org.mockito:mockito-android:$mockitoAndroidVersion",
            mockitoKotlin : "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion",
            testRunner    : "androidx.test:runner:$testRunnerVersion",
            testCore      : "androidx.test:core:$testCoreVersion",
            testRules     : "androidx.test:rules:$testRulesVersion",
            testJUnit     : "androidx.test.ext:junit:$testJUnitVersion",
            coreTesting   : "androidx.arch.core:core-testing:$archCoreTestingVersion",
            espressoCore  : "androidx.test.espresso:espresso-core:$espressoCoreVersion",
            kakao         : "com.agoda.kakao:kakao:$kakaoVersion"
        ]
    ]

    dataDependencies = [
        implementation: [
            kotlin               : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion",
            appCompat            : "androidx.appcompat:appcompat:$xAppCompatVersion",
            retrofit             : "com.squareup.retrofit2:retrofit:$retrofitVersion",
            retrofitGSonConverter: "com.squareup.retrofit2:converter-gson:$retrofitVersion",
            inject               : "javax.inject:javax.inject:$injectVersion",
            coroutinesCore       : "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
        ]
    ]

    dataTestDependencies = [
        testImplementation       : [
            junit         : "junit:junit:$junitVersion",
            kotlinJUnit   : "org.jetbrains.kotlin:kotlin-test-junit:$kotlinVersion",
            mockitoCore   : "org.mockito:mockito-core:$mockitoCoreVersion",
            mockito       : "org.mockito:mockito-inline:$mockitoInlineVersion",
            xCoreTesting  : "androidx.arch.core:core-testing:$archCoreTestingVersion",
            mockitoKotlin : "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion",
            coroutinesTest: "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
        ],
        androidTestImplementation: [
            mockitoAndroid: "org.mockito:mockito-android:$mockitoAndroidVersion",
            testRunner    : "androidx.test:runner:$testRunnerVersion",
            coreTesting   : "androidx.arch.core:core-testing:$archCoreTestingVersion",
            espressoCore  : "androidx.test.espresso:espresso-core:$espressoCoreVersion"
        ]
    ]

    domainDependencies = [
        implementation: [
            kotlin        : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion",
            appCompat     : "androidx.appcompat:appcompat:$xAppCompatVersion",
            inject        : "javax.inject:javax.inject:$injectVersion",
            coroutinesCore: "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
        ]
    ]

    domainTestDependencies = [
        testImplementation       : [
            junit         : "junit:junit:$junitVersion",
            coroutinesTest: "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
        ],
        androidTestImplementation: [
            testRunner  : "androidx.test:runner:$testRunnerVersion",
            espressoCore: "androidx.test.espresso:espresso-core:$espressoCoreVersion"
        ]
    ]

    presentationDependenciesImplementation = presentationDependencies['implementation'].values()
    presentationDependenciesKapt = presentationDependencies['kapt'].values()
    presentationTestDependenciesImplementation = presentationTestDependencies['testImplementation'].values()
    presentationAndroidTestDependenciesImplementation = presentationTestDependencies['androidTestImplementation'].values()

    dataDependenciesImplementation = dataDependencies['implementation'].values()
    dataTestDependenciesImplementation = dataTestDependencies['testImplementation'].values()
    dataAndroidTestDependenciesImplementation = dataTestDependencies['androidTestImplementation'].values()

    domainDependenciesImplementation = domainDependencies['implementation'].values()
    domainTestDependenciesImplementation = domainTestDependencies['testImplementation'].values()
    domainAndroidTestDependenciesImplementation = domainTestDependencies['androidTestImplementation'].values()
}